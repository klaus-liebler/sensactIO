// automatically generated by the FlatBuffers compiler, do not modify

import { flatbuffers } from "flatbuffers"
/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eBlindState{
  STOP= 0,
  UP= 1,
  DOWN= 2,
  PREPARE= 3
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eBlindCommand{
  STOP= 0,
  UP= 1,
  DOWN= 2,
  UP_OR_STOP= 3,
  DOWN_OR_STOP= 4
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eSinglePwmCommand{
  TOGGLE= 0,
  ON= 1,
  OFF= 2,
  CHANGE_INTENSITY= 3
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eRgbwPwmCommand{
  TOGGLE= 0,
  ON= 1,
  OFF= 2,
  CHANGE_HUE_0_360= 3,
  CHANGE_SATURATION_0_1= 4,
  CHANGE_VALUE_0_1= 5,
  CHANGE_R_0_255= 6,
  CHANGE_G_0_255= 7,
  CHANGE_B_0_255= 8,
  CHANGE_WWCW_BRIGHTNESS_0_1= 9,
  CHANGE_WWCW_RATIO_0_1= 10
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eOnOffCommand{
  ON= 0,
  AUTO= 1,
  OFF= 2,
  TRIGGER= 3,
  TRIGGER_MSECS= 4
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eOnOffState{
  MANUAL_OFF= 0,
  MANUAL_ON= 1,
  AUTO_OFF= 2,
  AUTO_ON= 3
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum uState{
  NONE= 0,
  tBlindState= 1,
  tSinglePwmState= 2,
  tOnOffState= 3,
  tRgbwPwmState= 4
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum uCommand{
  NONE= 0,
  tBlindCommand= 1,
  tSinglePwmCommand= 2,
  tOnOffCommand= 3,
  tRgbwPwmCommand= 4
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum eRelayInterlockMode{
  R1_UP__R2_DOWN= 0,
  R1_DOWN__R2_UP= 1,
  R1_POWER__R2_UP= 2,
  R1_POWER__R2_DOWN= 3,
  R1_UP__R2_POWER= 4,
  R1_DOWN__R2_POWER= 5
}};

/**
 * @enum {number}
 */
export namespace sensact.comm{
export enum uConfig{
  NONE= 0,
  tBlindConfig= 1,
  tSinglePwmConfig= 2,
  tOnOffConfig= 3,
  tRgbwPwmConfig= 4
}};

/**
 * @constructor
 */
export namespace sensact.comm{
export class tBlindState {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tBlindState
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tBlindState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindState= obj
 * @returns tBlindState
 */
static getRootAstBlindState(bb:flatbuffers.ByteBuffer, obj?:tBlindState):tBlindState {
  return (obj || new tBlindState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindState= obj
 * @returns tBlindState
 */
static getSizePrefixedRootAstBlindState(bb:flatbuffers.ByteBuffer, obj?:tBlindState):tBlindState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tBlindState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
position():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns sensact.comm.eBlindState
 */
state():sensact.comm.eBlindState {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eBlindState.STOP;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttBlindState(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number position
 */
static addPosition(builder:flatbuffers.Builder, position:number) {
  builder.addFieldInt16(0, position, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eBlindState state
 */
static addState(builder:flatbuffers.Builder, state:sensact.comm.eBlindState) {
  builder.addFieldInt8(1, state, sensact.comm.eBlindState.STOP);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtBlindState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtBlindState(builder:flatbuffers.Builder, position:number, state:sensact.comm.eBlindState):flatbuffers.Offset {
  tBlindState.starttBlindState(builder);
  tBlindState.addPosition(builder, position);
  tBlindState.addState(builder, state);
  return tBlindState.endtBlindState(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tSinglePwmState {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tSinglePwmState
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tSinglePwmState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmState= obj
 * @returns tSinglePwmState
 */
static getRootAstSinglePwmState(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmState):tSinglePwmState {
  return (obj || new tSinglePwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmState= obj
 * @returns tSinglePwmState
 */
static getSizePrefixedRootAstSinglePwmState(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmState):tSinglePwmState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tSinglePwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
intensity01():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns boolean
 */
on():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttSinglePwmState(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number intensity01
 */
static addIntensity01(builder:flatbuffers.Builder, intensity01:number) {
  builder.addFieldFloat32(0, intensity01, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean on
 */
static addOn(builder:flatbuffers.Builder, on:boolean) {
  builder.addFieldInt8(1, +on, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtSinglePwmState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtSinglePwmState(builder:flatbuffers.Builder, intensity01:number, on:boolean):flatbuffers.Offset {
  tSinglePwmState.starttSinglePwmState(builder);
  tSinglePwmState.addIntensity01(builder, intensity01);
  tSinglePwmState.addOn(builder, on);
  return tSinglePwmState.endtSinglePwmState(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tRgbwPwmState {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tRgbwPwmState
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tRgbwPwmState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmState= obj
 * @returns tRgbwPwmState
 */
static getRootAstRgbwPwmState(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmState):tRgbwPwmState {
  return (obj || new tRgbwPwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmState= obj
 * @returns tRgbwPwmState
 */
static getSizePrefixedRootAstRgbwPwmState(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmState):tRgbwPwmState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tRgbwPwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
r():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
g():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
b():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
ww():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns number
 */
cw():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns boolean
 */
on():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttRgbwPwmState(builder:flatbuffers.Builder) {
  builder.startObject(6);
};

/**
 * @param flatbuffers.Builder builder
 * @param number r
 */
static addR(builder:flatbuffers.Builder, r:number) {
  builder.addFieldInt8(0, r, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number g
 */
static addG(builder:flatbuffers.Builder, g:number) {
  builder.addFieldInt8(1, g, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number b
 */
static addB(builder:flatbuffers.Builder, b:number) {
  builder.addFieldInt8(2, b, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number ww
 */
static addWw(builder:flatbuffers.Builder, ww:number) {
  builder.addFieldFloat32(3, ww, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number cw
 */
static addCw(builder:flatbuffers.Builder, cw:number) {
  builder.addFieldFloat32(4, cw, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean on
 */
static addOn(builder:flatbuffers.Builder, on:boolean) {
  builder.addFieldInt8(5, +on, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtRgbwPwmState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtRgbwPwmState(builder:flatbuffers.Builder, r:number, g:number, b:number, ww:number, cw:number, on:boolean):flatbuffers.Offset {
  tRgbwPwmState.starttRgbwPwmState(builder);
  tRgbwPwmState.addR(builder, r);
  tRgbwPwmState.addG(builder, g);
  tRgbwPwmState.addB(builder, b);
  tRgbwPwmState.addWw(builder, ww);
  tRgbwPwmState.addCw(builder, cw);
  tRgbwPwmState.addOn(builder, on);
  return tRgbwPwmState.endtRgbwPwmState(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tOnOffState {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tOnOffState
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tOnOffState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffState= obj
 * @returns tOnOffState
 */
static getRootAstOnOffState(bb:flatbuffers.ByteBuffer, obj?:tOnOffState):tOnOffState {
  return (obj || new tOnOffState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffState= obj
 * @returns tOnOffState
 */
static getSizePrefixedRootAstOnOffState(bb:flatbuffers.ByteBuffer, obj?:tOnOffState):tOnOffState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tOnOffState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.eOnOffState
 */
state():sensact.comm.eOnOffState {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eOnOffState.MANUAL_OFF;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttOnOffState(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eOnOffState state
 */
static addState(builder:flatbuffers.Builder, state:sensact.comm.eOnOffState) {
  builder.addFieldInt8(0, state, sensact.comm.eOnOffState.MANUAL_OFF);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtOnOffState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtOnOffState(builder:flatbuffers.Builder, state:sensact.comm.eOnOffState):flatbuffers.Offset {
  tOnOffState.starttOnOffState(builder);
  tOnOffState.addState(builder, state);
  return tOnOffState.endtOnOffState(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tStateWrapper {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tStateWrapper
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tStateWrapper {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tStateWrapper= obj
 * @returns tStateWrapper
 */
static getRootAstStateWrapper(bb:flatbuffers.ByteBuffer, obj?:tStateWrapper):tStateWrapper {
  return (obj || new tStateWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tStateWrapper= obj
 * @returns tStateWrapper
 */
static getSizePrefixedRootAstStateWrapper(bb:flatbuffers.ByteBuffer, obj?:tStateWrapper):tStateWrapper {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tStateWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
applicationId():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns sensact.comm.uState
 */
stateType():sensact.comm.uState {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : sensact.comm.uState.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
state<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttStateWrapper(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number applicationId
 */
static addApplicationId(builder:flatbuffers.Builder, applicationId:number) {
  builder.addFieldInt32(0, applicationId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.uState stateType
 */
static addStateType(builder:flatbuffers.Builder, stateType:sensact.comm.uState) {
  builder.addFieldInt8(1, stateType, sensact.comm.uState.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset stateOffset
 */
static addState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, stateOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtStateWrapper(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtStateWrapper(builder:flatbuffers.Builder, applicationId:number, stateType:sensact.comm.uState, stateOffset:flatbuffers.Offset):flatbuffers.Offset {
  tStateWrapper.starttStateWrapper(builder);
  tStateWrapper.addApplicationId(builder, applicationId);
  tStateWrapper.addStateType(builder, stateType);
  tStateWrapper.addState(builder, stateOffset);
  return tStateWrapper.endtStateWrapper(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tState {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tState
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tState= obj
 * @returns tState
 */
static getRootAstState(bb:flatbuffers.ByteBuffer, obj?:tState):tState {
  return (obj || new tState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tState= obj
 * @returns tState
 */
static getSizePrefixedRootAstState(bb:flatbuffers.ByteBuffer, obj?:tState):tState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
timestamp():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param sensact.comm.tStateWrapper= obj
 * @returns sensact.comm.tStateWrapper
 */
states(index: number, obj?:sensact.comm.tStateWrapper):sensact.comm.tStateWrapper|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new sensact.comm.tStateWrapper()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
statesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttState(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number timestamp
 */
static addTimestamp(builder:flatbuffers.Builder, timestamp:number) {
  builder.addFieldInt32(0, timestamp, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset statesOffset
 */
static addStates(builder:flatbuffers.Builder, statesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, statesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createStatesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startStatesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtState(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtState(builder:flatbuffers.Builder, timestamp:number, statesOffset:flatbuffers.Offset):flatbuffers.Offset {
  tState.starttState(builder);
  tState.addTimestamp(builder, timestamp);
  tState.addStates(builder, statesOffset);
  return tState.endtState(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tBlindCommand {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tBlindCommand
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tBlindCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindCommand= obj
 * @returns tBlindCommand
 */
static getRootAstBlindCommand(bb:flatbuffers.ByteBuffer, obj?:tBlindCommand):tBlindCommand {
  return (obj || new tBlindCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindCommand= obj
 * @returns tBlindCommand
 */
static getSizePrefixedRootAstBlindCommand(bb:flatbuffers.ByteBuffer, obj?:tBlindCommand):tBlindCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tBlindCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.eBlindCommand
 */
cmd():sensact.comm.eBlindCommand {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eBlindCommand.STOP;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttBlindCommand(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eBlindCommand cmd
 */
static addCmd(builder:flatbuffers.Builder, cmd:sensact.comm.eBlindCommand) {
  builder.addFieldInt8(0, cmd, sensact.comm.eBlindCommand.STOP);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtBlindCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtBlindCommand(builder:flatbuffers.Builder, cmd:sensact.comm.eBlindCommand):flatbuffers.Offset {
  tBlindCommand.starttBlindCommand(builder);
  tBlindCommand.addCmd(builder, cmd);
  return tBlindCommand.endtBlindCommand(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tSinglePwmCommand {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tSinglePwmCommand
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tSinglePwmCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmCommand= obj
 * @returns tSinglePwmCommand
 */
static getRootAstSinglePwmCommand(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmCommand):tSinglePwmCommand {
  return (obj || new tSinglePwmCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmCommand= obj
 * @returns tSinglePwmCommand
 */
static getSizePrefixedRootAstSinglePwmCommand(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmCommand):tSinglePwmCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tSinglePwmCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.eSinglePwmCommand
 */
cmd():sensact.comm.eSinglePwmCommand {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eSinglePwmCommand.TOGGLE;
};

/**
 * @returns number
 */
intensity01():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttSinglePwmCommand(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eSinglePwmCommand cmd
 */
static addCmd(builder:flatbuffers.Builder, cmd:sensact.comm.eSinglePwmCommand) {
  builder.addFieldInt8(0, cmd, sensact.comm.eSinglePwmCommand.TOGGLE);
};

/**
 * @param flatbuffers.Builder builder
 * @param number intensity01
 */
static addIntensity01(builder:flatbuffers.Builder, intensity01:number) {
  builder.addFieldFloat32(1, intensity01, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtSinglePwmCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtSinglePwmCommand(builder:flatbuffers.Builder, cmd:sensact.comm.eSinglePwmCommand, intensity01:number):flatbuffers.Offset {
  tSinglePwmCommand.starttSinglePwmCommand(builder);
  tSinglePwmCommand.addCmd(builder, cmd);
  tSinglePwmCommand.addIntensity01(builder, intensity01);
  return tSinglePwmCommand.endtSinglePwmCommand(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tRgbwPwmCommand {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tRgbwPwmCommand
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tRgbwPwmCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmCommand= obj
 * @returns tRgbwPwmCommand
 */
static getRootAstRgbwPwmCommand(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmCommand):tRgbwPwmCommand {
  return (obj || new tRgbwPwmCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmCommand= obj
 * @returns tRgbwPwmCommand
 */
static getSizePrefixedRootAstRgbwPwmCommand(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmCommand):tRgbwPwmCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tRgbwPwmCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.eRgbwPwmCommand
 */
cmd():sensact.comm.eRgbwPwmCommand {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eRgbwPwmCommand.TOGGLE;
};

/**
 * @returns number
 */
payload():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttRgbwPwmCommand(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eRgbwPwmCommand cmd
 */
static addCmd(builder:flatbuffers.Builder, cmd:sensact.comm.eRgbwPwmCommand) {
  builder.addFieldInt8(0, cmd, sensact.comm.eRgbwPwmCommand.TOGGLE);
};

/**
 * @param flatbuffers.Builder builder
 * @param number payload
 */
static addPayload(builder:flatbuffers.Builder, payload:number) {
  builder.addFieldFloat32(1, payload, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtRgbwPwmCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtRgbwPwmCommand(builder:flatbuffers.Builder, cmd:sensact.comm.eRgbwPwmCommand, payload:number):flatbuffers.Offset {
  tRgbwPwmCommand.starttRgbwPwmCommand(builder);
  tRgbwPwmCommand.addCmd(builder, cmd);
  tRgbwPwmCommand.addPayload(builder, payload);
  return tRgbwPwmCommand.endtRgbwPwmCommand(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tOnOffCommand {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tOnOffCommand
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tOnOffCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffCommand= obj
 * @returns tOnOffCommand
 */
static getRootAstOnOffCommand(bb:flatbuffers.ByteBuffer, obj?:tOnOffCommand):tOnOffCommand {
  return (obj || new tOnOffCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffCommand= obj
 * @returns tOnOffCommand
 */
static getSizePrefixedRootAstOnOffCommand(bb:flatbuffers.ByteBuffer, obj?:tOnOffCommand):tOnOffCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tOnOffCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.eOnOffCommand
 */
cmd():sensact.comm.eOnOffCommand {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eOnOffCommand.ON;
};

/**
 * @returns number
 */
msecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttOnOffCommand(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eOnOffCommand cmd
 */
static addCmd(builder:flatbuffers.Builder, cmd:sensact.comm.eOnOffCommand) {
  builder.addFieldInt8(0, cmd, sensact.comm.eOnOffCommand.ON);
};

/**
 * @param flatbuffers.Builder builder
 * @param number msecs
 */
static addMsecs(builder:flatbuffers.Builder, msecs:number) {
  builder.addFieldInt32(1, msecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtOnOffCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtOnOffCommand(builder:flatbuffers.Builder, cmd:sensact.comm.eOnOffCommand, msecs:number):flatbuffers.Offset {
  tOnOffCommand.starttOnOffCommand(builder);
  tOnOffCommand.addCmd(builder, cmd);
  tOnOffCommand.addMsecs(builder, msecs);
  return tOnOffCommand.endtOnOffCommand(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tCommand {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tCommand
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tCommand= obj
 * @returns tCommand
 */
static getRootAstCommand(bb:flatbuffers.ByteBuffer, obj?:tCommand):tCommand {
  return (obj || new tCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tCommand= obj
 * @returns tCommand
 */
static getSizePrefixedRootAstCommand(bb:flatbuffers.ByteBuffer, obj?:tCommand):tCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
applicationId():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns sensact.comm.uCommand
 */
commandType():sensact.comm.uCommand {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : sensact.comm.uCommand.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
command<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttCommand(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number applicationId
 */
static addApplicationId(builder:flatbuffers.Builder, applicationId:number) {
  builder.addFieldInt32(0, applicationId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.uCommand commandType
 */
static addCommandType(builder:flatbuffers.Builder, commandType:sensact.comm.uCommand) {
  builder.addFieldInt8(1, commandType, sensact.comm.uCommand.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset commandOffset
 */
static addCommand(builder:flatbuffers.Builder, commandOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, commandOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtCommand(builder:flatbuffers.Builder, applicationId:number, commandType:sensact.comm.uCommand, commandOffset:flatbuffers.Offset):flatbuffers.Offset {
  tCommand.starttCommand(builder);
  tCommand.addApplicationId(builder, applicationId);
  tCommand.addCommandType(builder, commandType);
  tCommand.addCommand(builder, commandOffset);
  return tCommand.endtCommand(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tBlindConfig {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tBlindConfig
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tBlindConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindConfig= obj
 * @returns tBlindConfig
 */
static getRootAstBlindConfig(bb:flatbuffers.ByteBuffer, obj?:tBlindConfig):tBlindConfig {
  return (obj || new tBlindConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tBlindConfig= obj
 * @returns tBlindConfig
 */
static getSizePrefixedRootAstBlindConfig(bb:flatbuffers.ByteBuffer, obj?:tBlindConfig):tBlindConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tBlindConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
relay1():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
relay2():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns sensact.comm.eRelayInterlockMode
 */
mode():sensact.comm.eRelayInterlockMode {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eRelayInterlockMode.R1_UP__R2_DOWN;
};

/**
 * @returns number
 */
timeUpMsecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
timeDownMsecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttBlindConfig(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param flatbuffers.Builder builder
 * @param number relay1
 */
static addRelay1(builder:flatbuffers.Builder, relay1:number) {
  builder.addFieldInt16(0, relay1, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number relay2
 */
static addRelay2(builder:flatbuffers.Builder, relay2:number) {
  builder.addFieldInt16(1, relay2, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eRelayInterlockMode mode
 */
static addMode(builder:flatbuffers.Builder, mode:sensact.comm.eRelayInterlockMode) {
  builder.addFieldInt8(2, mode, sensact.comm.eRelayInterlockMode.R1_UP__R2_DOWN);
};

/**
 * @param flatbuffers.Builder builder
 * @param number timeUpMsecs
 */
static addTimeUpMsecs(builder:flatbuffers.Builder, timeUpMsecs:number) {
  builder.addFieldInt32(3, timeUpMsecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number timeDownMsecs
 */
static addTimeDownMsecs(builder:flatbuffers.Builder, timeDownMsecs:number) {
  builder.addFieldInt32(4, timeDownMsecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtBlindConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtBlindConfig(builder:flatbuffers.Builder, relay1:number, relay2:number, mode:sensact.comm.eRelayInterlockMode, timeUpMsecs:number, timeDownMsecs:number):flatbuffers.Offset {
  tBlindConfig.starttBlindConfig(builder);
  tBlindConfig.addRelay1(builder, relay1);
  tBlindConfig.addRelay2(builder, relay2);
  tBlindConfig.addMode(builder, mode);
  tBlindConfig.addTimeUpMsecs(builder, timeUpMsecs);
  tBlindConfig.addTimeDownMsecs(builder, timeDownMsecs);
  return tBlindConfig.endtBlindConfig(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tSinglePwmConfig {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tSinglePwmConfig
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tSinglePwmConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmConfig= obj
 * @returns tSinglePwmConfig
 */
static getRootAstSinglePwmConfig(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmConfig):tSinglePwmConfig {
  return (obj || new tSinglePwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tSinglePwmConfig= obj
 * @returns tSinglePwmConfig
 */
static getSizePrefixedRootAstSinglePwmConfig(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmConfig):tSinglePwmConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tSinglePwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
pwmFirst():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
pwmLast():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
idOfStandbyController():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
autoOffMsecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttSinglePwmConfig(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmFirst
 */
static addPwmFirst(builder:flatbuffers.Builder, pwmFirst:number) {
  builder.addFieldInt16(0, pwmFirst, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmLast
 */
static addPwmLast(builder:flatbuffers.Builder, pwmLast:number) {
  builder.addFieldInt16(1, pwmLast, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number idOfStandbyController
 */
static addIdOfStandbyController(builder:flatbuffers.Builder, idOfStandbyController:number) {
  builder.addFieldInt16(2, idOfStandbyController, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number autoOffMsecs
 */
static addAutoOffMsecs(builder:flatbuffers.Builder, autoOffMsecs:number) {
  builder.addFieldInt32(3, autoOffMsecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtSinglePwmConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtSinglePwmConfig(builder:flatbuffers.Builder, pwmFirst:number, pwmLast:number, idOfStandbyController:number, autoOffMsecs:number):flatbuffers.Offset {
  tSinglePwmConfig.starttSinglePwmConfig(builder);
  tSinglePwmConfig.addPwmFirst(builder, pwmFirst);
  tSinglePwmConfig.addPwmLast(builder, pwmLast);
  tSinglePwmConfig.addIdOfStandbyController(builder, idOfStandbyController);
  tSinglePwmConfig.addAutoOffMsecs(builder, autoOffMsecs);
  return tSinglePwmConfig.endtSinglePwmConfig(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tRgbwPwmConfig {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tRgbwPwmConfig
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tRgbwPwmConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmConfig= obj
 * @returns tRgbwPwmConfig
 */
static getRootAstRgbwPwmConfig(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmConfig):tRgbwPwmConfig {
  return (obj || new tRgbwPwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tRgbwPwmConfig= obj
 * @returns tRgbwPwmConfig
 */
static getSizePrefixedRootAstRgbwPwmConfig(bb:flatbuffers.ByteBuffer, obj?:tRgbwPwmConfig):tRgbwPwmConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tRgbwPwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
pwmR():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
pwmG():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
pwmB():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
pwmWW():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
pwmCW():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
idOfStandbyController():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
autoOffMsecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttRgbwPwmConfig(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmR
 */
static addPwmR(builder:flatbuffers.Builder, pwmR:number) {
  builder.addFieldInt16(0, pwmR, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmG
 */
static addPwmG(builder:flatbuffers.Builder, pwmG:number) {
  builder.addFieldInt16(1, pwmG, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmB
 */
static addPwmB(builder:flatbuffers.Builder, pwmB:number) {
  builder.addFieldInt16(2, pwmB, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmWW
 */
static addPwmWW(builder:flatbuffers.Builder, pwmWW:number) {
  builder.addFieldInt16(3, pwmWW, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number pwmCW
 */
static addPwmCW(builder:flatbuffers.Builder, pwmCW:number) {
  builder.addFieldInt16(4, pwmCW, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number idOfStandbyController
 */
static addIdOfStandbyController(builder:flatbuffers.Builder, idOfStandbyController:number) {
  builder.addFieldInt16(5, idOfStandbyController, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number autoOffMsecs
 */
static addAutoOffMsecs(builder:flatbuffers.Builder, autoOffMsecs:number) {
  builder.addFieldInt32(6, autoOffMsecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtRgbwPwmConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtRgbwPwmConfig(builder:flatbuffers.Builder, pwmR:number, pwmG:number, pwmB:number, pwmWW:number, pwmCW:number, idOfStandbyController:number, autoOffMsecs:number):flatbuffers.Offset {
  tRgbwPwmConfig.starttRgbwPwmConfig(builder);
  tRgbwPwmConfig.addPwmR(builder, pwmR);
  tRgbwPwmConfig.addPwmG(builder, pwmG);
  tRgbwPwmConfig.addPwmB(builder, pwmB);
  tRgbwPwmConfig.addPwmWW(builder, pwmWW);
  tRgbwPwmConfig.addPwmCW(builder, pwmCW);
  tRgbwPwmConfig.addIdOfStandbyController(builder, idOfStandbyController);
  tRgbwPwmConfig.addAutoOffMsecs(builder, autoOffMsecs);
  return tRgbwPwmConfig.endtRgbwPwmConfig(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tOnOffConfig {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tOnOffConfig
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tOnOffConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffConfig= obj
 * @returns tOnOffConfig
 */
static getRootAstOnOffConfig(bb:flatbuffers.ByteBuffer, obj?:tOnOffConfig):tOnOffConfig {
  return (obj || new tOnOffConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tOnOffConfig= obj
 * @returns tOnOffConfig
 */
static getSizePrefixedRootAstOnOffConfig(bb:flatbuffers.ByteBuffer, obj?:tOnOffConfig):tOnOffConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tOnOffConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
relay():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
autoOffMsecs():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns sensact.comm.eOnOffState
 */
initialState():sensact.comm.eOnOffState {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : sensact.comm.eOnOffState.MANUAL_OFF;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttOnOffConfig(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number relay
 */
static addRelay(builder:flatbuffers.Builder, relay:number) {
  builder.addFieldInt16(0, relay, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number autoOffMsecs
 */
static addAutoOffMsecs(builder:flatbuffers.Builder, autoOffMsecs:number) {
  builder.addFieldInt32(1, autoOffMsecs, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.eOnOffState initialState
 */
static addInitialState(builder:flatbuffers.Builder, initialState:sensact.comm.eOnOffState) {
  builder.addFieldInt8(2, initialState, sensact.comm.eOnOffState.MANUAL_OFF);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtOnOffConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtOnOffConfig(builder:flatbuffers.Builder, relay:number, autoOffMsecs:number, initialState:sensact.comm.eOnOffState):flatbuffers.Offset {
  tOnOffConfig.starttOnOffConfig(builder);
  tOnOffConfig.addRelay(builder, relay);
  tOnOffConfig.addAutoOffMsecs(builder, autoOffMsecs);
  tOnOffConfig.addInitialState(builder, initialState);
  return tOnOffConfig.endtOnOffConfig(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tConfigWrapper {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tConfigWrapper
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tConfigWrapper {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tConfigWrapper= obj
 * @returns tConfigWrapper
 */
static getRootAstConfigWrapper(bb:flatbuffers.ByteBuffer, obj?:tConfigWrapper):tConfigWrapper {
  return (obj || new tConfigWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tConfigWrapper= obj
 * @returns tConfigWrapper
 */
static getSizePrefixedRootAstConfigWrapper(bb:flatbuffers.ByteBuffer, obj?:tConfigWrapper):tConfigWrapper {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tConfigWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns sensact.comm.uConfig
 */
configType():sensact.comm.uConfig {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : sensact.comm.uConfig.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
config<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttConfigWrapper(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param sensact.comm.uConfig configType
 */
static addConfigType(builder:flatbuffers.Builder, configType:sensact.comm.uConfig) {
  builder.addFieldInt8(0, configType, sensact.comm.uConfig.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset configOffset
 */
static addConfig(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, configOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtConfigWrapper(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtConfigWrapper(builder:flatbuffers.Builder, configType:sensact.comm.uConfig, configOffset:flatbuffers.Offset):flatbuffers.Offset {
  tConfigWrapper.starttConfigWrapper(builder);
  tConfigWrapper.addConfigType(builder, configType);
  tConfigWrapper.addConfig(builder, configOffset);
  return tConfigWrapper.endtConfigWrapper(builder);
}
}
}
/**
 * @constructor
 */
export namespace sensact.comm{
export class tIoConfig {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns tIoConfig
 */
__init(i:number, bb:flatbuffers.ByteBuffer):tIoConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tIoConfig= obj
 * @returns tIoConfig
 */
static getRootAstIoConfig(bb:flatbuffers.ByteBuffer, obj?:tIoConfig):tIoConfig {
  return (obj || new tIoConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param tIoConfig= obj
 * @returns tIoConfig
 */
static getSizePrefixedRootAstIoConfig(bb:flatbuffers.ByteBuffer, obj?:tIoConfig):tIoConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tIoConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
timestamp():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param sensact.comm.tConfigWrapper= obj
 * @returns sensact.comm.tConfigWrapper
 */
configs(index: number, obj?:sensact.comm.tConfigWrapper):sensact.comm.tConfigWrapper|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new sensact.comm.tConfigWrapper()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
configsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static starttIoConfig(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number timestamp
 */
static addTimestamp(builder:flatbuffers.Builder, timestamp:number) {
  builder.addFieldInt32(0, timestamp, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset configsOffset
 */
static addConfigs(builder:flatbuffers.Builder, configsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, configsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createConfigsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startConfigsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endtIoConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createtIoConfig(builder:flatbuffers.Builder, timestamp:number, configsOffset:flatbuffers.Offset):flatbuffers.Offset {
  tIoConfig.starttIoConfig(builder);
  tIoConfig.addTimestamp(builder, timestamp);
  tIoConfig.addConfigs(builder, configsOffset);
  return tIoConfig.endtIoConfig(builder);
}
}
}
